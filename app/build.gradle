plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
//    id 'kotlin-android'
//    id 'kotlin-android-extensions'

    // Add the Google services Gradle plugin
    id 'com.google.gms.google-services'
}

//local.properties 사용을 위함
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'com.example.myapplication'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.myapplication"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //firebase bucket
        buildConfigField "String", "firebase_bucket", properties["firebase.bucket"]
        // api key 변수 지정
        buildConfigField "String", "APIKEY1", properties["api.key.test1"]
        buildConfigField "String", "APIKEY2", properties["api.key.test2"]
        buildConfigField "String", "APIKEY3", properties["api.key.test3"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}


dependencies {

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:31.5.0')
    // Declare the dependency for the Cloud Firestore library
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'





    implementation  'com.github.bumptech.glide:glide:4.14.2'
    // Skip this if you don't want to use integration libraries or configure Glide.
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.camera:camera-view:1.2.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    //cameraX : user-guide
//    def camerax_version = "1.1.0-beta01"
//    def camerax_version = "1.2.0-beta02"
//    def camerax_version = "1.0.2"
    def camerax_version = "1.2.1"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"

    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"


//    // CameraX core library using the camera2 implementation
//    def camerax_version = "1.3.0-alpha04"
//    // The following line is optional, as the core library is included indirectly by camera-camera2
//    implementation "androidx.camera:camera-core:${camerax_version}"
//    implementation "androidx.camera:camera-camera2:${camerax_version}"
//    // If you want to additionally use the CameraX Lifecycle library
//    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
//    // If you want to additionally use the CameraX VideoCapture library
//    implementation "androidx.camera:camera-video:${camerax_version}"
//    // If you want to additionally use the CameraX View class
//    implementation "androidx.camera:camera-view:${camerax_version}"
//    // If you want to additionally add CameraX ML Kit Vision Integration
//    implementation "androidx.camera:camera-mlkit-vision:${camerax_version}"
//    // If you want to additionally use the CameraX Extensions library
//    implementation "androidx.camera:camera-extensions:${camerax_version}"

}