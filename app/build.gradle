plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // Add the Google services Gradle plugin
    id 'com.google.gms.google-services'
}

//local.properties 사용을 위함
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'com.example.myapplication'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.myapplication"
        minSdk 24
        targetSdk 33 //31<->33에서 바꿈
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        firebase bucket
        buildConfigField "String", "firebase_bucket", properties["firebase.bucket"]

        // ailabtools : api keys
        buildConfigField "String", "api_key_ailabtools_yeo", properties["api.key.ailabtools.yeo"]
        buildConfigField "String", "api_key_ailabtools_cha", properties["api.key.ailabtools.cha"]
        buildConfigField "String", "api_key_ailabtools_seo", properties["api.key.ailabtools.seo"]

        buildConfigField "String", "api_key_luxand", properties["api.key.luxand"]

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        //retrofit 쓰는 분이 자바 버전 11로 바꿔줬음. 왜지? 1_8 버전은 java8, 현재 쓰고있는거는 11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}


dependencies {


    implementation("io.coil-kt:coil:2.0.0")

    // Use this dependency to bundle the model with your app
//    implementation 'com.google.mlkit:face-detection:16.1.5'

//    // Use this dependency to use the dynamically downloaded model in Google Play Services
    implementation 'com.google.android.gms:play-services-mlkit-face-detection:17.1.0'




    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:31.5.0')
    // Declare the dependency for the Cloud Firestore library
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'



    implementation  'com.github.bumptech.glide:glide:4.14.2'
    // Skip this if you don't want to use integration libraries or configure Glide.
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.camera:camera-view:1.2.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    //cameraX : user-guide
//    def camerax_version = "1.1.0-beta01"
//    def camerax_version = "1.2.0-beta02"
//    def camerax_version = "1.0.2"
    def camerax_version = "1.2.1"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"

    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"


    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    //implementation 'com.squareup.retrofit2:retrofit-converters:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.2"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    //volley
    implementation 'com.android.volley:volley:1.2.1'

    // OkHttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    //coroutine참조 : https://whyprogrammer.tistory.com/596
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'


    def nav_version = "2.6.0-alpha06"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"

}